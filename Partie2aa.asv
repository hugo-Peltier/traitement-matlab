%@hugop%
%% Partie II-A Enregistrement live
clear; close all; clc;

%% 1) on charge les fichiers audio
path = "C:\Users\hugop\OneDrive (1)\Cours esilv\A3\semestre 2\traitement\projet\sons\";

[x, fs_x]     = audioread(path + "singing.wav");
[h_ch, fs_ch] = audioread(path + "ChurchImpulse.wav");
[h_dg, fs_dg] = audioread(path + "DungeonImpulse.wav");

disp("les fichiers audio ont √©t√© charg√©s avec succ√®s. Brav");

%% 2) V√©rifier les fr√©quences d'√©chantillonnage
fprintf("üéµ fs 'singing.wav'        : %d Hz\n", fs_x);
fprintf("‚õ™ fs 'ChurchImpulse.wav' : %d Hz\n", fs_ch);
fprintf("üè∞ fs 'DungeonImpulse.wav': %d Hz\n", fs_dg);

if fs_x == fs_ch && fs_x == fs_dg
    disp("‚úÖ 2. Les fr√©quences d‚Äô√©chantillonnage sont identiques.");
else
    error("‚ùå Fr√©quences d‚Äô√©chantillonnage incompatibles. Utiliser resample.");
end

%% 3) Convolution des signaux (effets de salle)
y_church  = conv(x, h_ch);
y_dungeon = conv(x, h_dg);
disp("‚úÖ 3. Convolution effectu√©e avec succ√®s.");

%% 4) √âcoute des sons (volume mod√©r√© recommand√©)
disp("üéß 4. Lecture des sons...");
sound(x, fs_x);        pause(length(x)/fs_x + 1);
sound(h_ch, fs_x);     pause(length(h_ch)/fs_x + 1);
sound(y_church, fs_x); pause(length(y_church)/fs_x + 1);
sound(h_dg, fs_x);     pause(length(h_dg)/fs_x + 1);
sound(y_dungeon, fs_x);

%% 5) Normalisation et sauvegarde (remplacement automatique des anciens fichiers)
y_church = y_church / max(abs(y_church));
y_dungeon = y_dungeon / max(abs(y_dungeon));

% Supprimer les anciens fichiers s‚Äôils existent
if isfile(path + "singingChurch.wav")
    delete(path + "singingChurch.wav");
end
if isfile(path + "singingDungeon.wav")
    delete(path + "singingDungeon.wav");
end

audiowrite(path + "singingChurch.wav", y_church, fs_x);
audiowrite(path + "singingDungeon.wav", y_dungeon, fs_x);
disp("üíæ 5. Fichiers sauvegard√©s sans clipping (anciens remplac√©s).");

%% 6) Affichage temporel
t_x = (0:length(x)-1)/fs_x;
t_ch = (0:length(y_church)-1)/fs_x;
t_dg = (0:length(y_dungeon)-1)/fs_x;

figure;
subplot(3,1,1); plot(t_x, x); title("Signal original"); xlabel("Temps (s)"); ylabel("Amplitude");
subplot(3,1,2); plot(t_ch, y_church); title("SingingChurch"); xlabel("Temps (s)"); ylabel("Amplitude");
subplot(3,1,3); plot(t_dg, y_dungeon); title("SingingDungeon"); xlabel("Temps (s)"); ylabel("Amplitude");

%% 7) Calcul des FFT
N = 2^nextpow2(max([length(x), length(y_church), length(y_dungeon)]));
X  = fftshift(fft(x, N));
Yc = fftshift(fft(y_church, N));
Yd = fftshift(fft(y_dungeon, N));
f = linspace(-fs_x/2, fs_x/2, N);

%% 8) Affichage des spectres en amplitude
figure;
subplot(3,1,1); plot(f, abs(X)); title("|FFT| Signal original"); xlabel("Fr√©quence (Hz)"); ylabel("Amplitude");
subplot(3,1,2); plot(f, abs(Yc)); title("|FFT| SingingChurch"); xlabel("Fr√©quence (Hz)"); ylabel("Amplitude");
subplot(3,1,3); plot(f, abs(Yd)); title("|FFT| SingingDungeon"); xlabel("Fr√©quence (Hz)"); ylabel("Amplitude");
